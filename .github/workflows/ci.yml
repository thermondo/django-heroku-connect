name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DATABASE_USER: postgres
  DATABASE_PASSWORD: postgres

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install package dependencies
      run: |
        sudo apt-get install -y gdal-bin

    - name: Set up Python
      uses: actions/setup-python@v3

    - name: restore pip download cache
      uses: syphar/restore-pip-download-cache@v1

    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: "requirements-dev.txt"

    - name: try building docs, check spelling
      run: |
        python setup.py build_sphinx -b spelling

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install package dependencies
      run: |
        sudo apt-get install -y gdal-bin

    - name: Set up Python
      uses: actions/setup-python@v3

    - name: restore pip download cache
      uses: syphar/restore-pip-download-cache@v1

    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: "requirements-dev.txt"

    - name: run linters via pre-commit
      run: |
        pre-commit run --all --show-diff-on-failure --color=always

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
        django-version: [3.2, "4.0", "4.1"]
        exclude:
          - python-version: 3.7
            django-version: "4.0"
          - python-version: 3.7
            django-version: "4.1"

    services:
      postgresql:
        image: postgis/postgis:11-2.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: heroku_connect_test
        ports:
        - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Install package dependencies
      run: |
        sudo apt-get install -y gdal-bin

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: "requirements-dev.txt"

    - name: override initial django installation
      run: |
        pip install Django~=${{ matrix.django-version }}

    - name: run tests
      run: |
        coverage run --source=heroku_connect -m 'pytest'

    - name: installing coveragepy for codecov upload
      # the codecov github action needs this package to find the reports
      run: pip install coverage

    - uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
